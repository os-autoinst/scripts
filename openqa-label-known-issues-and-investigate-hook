#!/bin/bash

set -eo pipefail

# "hook script" intended to be called by openQA instances taking a job ID as
# parameter and forwarding a complete job URL to "openqa-label-known-issues"
# on stdin and all left unknowns to "openqa-investigate"
dir=$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd -P)
PATH=$dir:$PATH

# shellcheck source=/dev/null
source "$dir"/_common

host="${host:-"openqa.opensuse.org"}"
scheme="${scheme:-"https"}"
host_url="$scheme://$host"

investigate-and-bisect() {
    local rc=0 test
    read -r test
    openqa-investigate "$test" || rc=$?
    [[ "$rc" -eq 142 ]] && return "$rc"
    openqa-trigger-bisect-jobs --url "$test" || rc=$?
    return "$rc"
}

label() {
    local url=$1
    openqa-label-known-issues "$url" | sed -n 's/\[\([^]]*\)\].*Unknown issue, to be reviewed.*/\1/p'
}

hook() {
    local id="${1:?"Need 'job_id'"}"
    local url=$host_url/tests/$id
    job_data=$(openqa-api-get "jobs/$id")
    state="$(echo "$job_data" | runjq -r '.job.state')" || return $?
    result="$(echo "$job_data" | runjq -r '.job.result')" || return $?
    [[ "$state" != "done" ]] && return
    if [[ "$result" != passed ]]; then
        label "$url" | investigate-and-bisect
    else
        echo "$url" | investigate-and-bisect
    fi
}

[[ $0 != "${BASH_SOURCE[0]}" ]] || hook "$@"
