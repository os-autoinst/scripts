#!/bin/bash -x

# Trigger tests on an openQA instance testing openQA itself.
#
# Can be configured by variables.

# shellcheck source=/dev/null
source "$(dirname "${BASH_SOURCE[0]}")"/_common

# configuration variables with defaults.
target_host="${target_host:-"openqa.opensuse.org"}"
target_host_proto="${target_host_proto:-"https"}"
dry_run="${dry_run:-"0"}"
tw_openqa_host="${tw_openqa_host:-"https://openqa.opensuse.org"}"
tw_group_id="${tw_group_id:-"1"}"
openqa_cli="${openqa_cli:-"openqa-cli"}"
arch="${arch:-"x86_64"}"
machine="${machine:-"64bit"}"
build_tag=${BUILD_TAG:-}
client_prefix=${client_prefix:-}

main() {
    [ "$dry_run" = "1" ] && client_prefix="echo"
    local qcow build
    download_latest_published_tumbleweed_image
    trigger
}

download_latest_published_tumbleweed_image() {
    qcow=$(find_latest_published_tumbleweed_image "$tw_group_id" "$arch" "$machine" qcow)
    if [ "$target_host_proto://$target_host" != "$tw_openqa_host" ]; then
        url="${tw_openqa_host}/assets/hdd/${qcow}"

        # instead of manual wget it should also work to provide a whitelisted url to openqa as HDD_1_URL which should then download it itself but a first experiment didn't work
        ${client_prefix} wget -c "$url" -O /var/lib/openqa/factory/hdd/"$qcow"
    fi
    # ensure the build tag conforms to coolo's unwritten rules for the openQA dashboard
    build=$(echo "$build_tag" | sed -e "s/jenkins-trigger-openQA_in_openQA-/:/" -e "s/-/./g")
}

trigger() {
    # prevent host access problem when running within o3 infrastructure
    # where o3 is not reachable over https
    if [ "$target_host" = "openqa.opensuse.org" ]; then
        ARGS="OPENQA_HOST=http://openqa.opensuse.org"
    fi

    ${client_prefix} "${openqa_cli}" \
        api --host "${target_host_proto}://${target_host}" -X POST isos \
        VERSION=Tumbleweed \
        DISTRI=openQA FLAVOR=dev BUILD="${build}" \
        ARCH="${arch}" BACKEND=qemu WORKER_CLASS=qemu_x86_64 \
        HDD_1="$qcow" \
        ${ARGS} \
        | tee job_post_response

    echo 'Triggered as:'
    for job_id in $(job_ids job_post_response); do
        echo " - ${target_host_proto}://${target_host}/tests/${job_id}"
    done
}

[[ $0 != "${BASH_SOURCE[0]}" ]] || main "$@"
